//Ejercicio con Asincrónica: Futros, async, await

//Future_uso incorrecto de Función asincronica (fetchUserOrder

void main() {
  print(createOrderMessage());
}

String createOrderMessage() {
  var order = fetchUserOrder();
  return 'Your order is: $order';
}

Future<String> fetchUserOrder() =>
    // Imagine that this function is more complex and slow.
    Future.delayed(
      const Duration(seconds: 2),
      () => 'Large Latte',
    );

//Future_Uso correcto de fetchUserOrder

Future<void> fetchUserOrder() {
  // Imagine that this function is fetching user info from another service or database.
  return Future.delayed(const Duration(seconds: 2), () => 
	print('Large Latte'));
}

void main() {
  fetchUserOrder();
  print('Fetching user order...');
}

//Future_Uso Exception en fetchUserOrder para
Future<void> fetchUserOrder() {
// Imagine that this function is fetching user info but encounters a bug
  return Future.delayed(const Duration(seconds: 2),
      () => throw Exception('Logout failed: user ID is invalid'));
}

void main() {
  fetchUserOrder();
  print('Fetching user order...');
}